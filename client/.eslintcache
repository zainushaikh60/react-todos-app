[{"D:\\React-Apps\\todo-app\\client\\src\\index.js":"1","D:\\React-Apps\\todo-app\\client\\src\\App.js":"2","D:\\React-Apps\\todo-app\\client\\src\\components\\Home.js":"3","D:\\React-Apps\\todo-app\\client\\src\\components\\TodosList.js":"4","D:\\React-Apps\\todo-app\\client\\src\\components\\Todos.js":"5","D:\\React-Apps\\todo-app\\client\\src\\store.js":"6","D:\\React-Apps\\todo-app\\client\\src\\reducers\\index.js":"7","D:\\React-Apps\\todo-app\\client\\src\\reducers\\todosListReducer.js":"8","D:\\React-Apps\\todo-app\\client\\src\\actions\\types.js":"9","D:\\React-Apps\\todo-app\\client\\src\\actions\\todosListAction.js":"10","D:\\React-Apps\\todo-app\\client\\src\\reducers\\todosReducer.js":"11","D:\\React-Apps\\todo-app\\client\\src\\actions\\todosAction.js":"12","D:\\React-Apps\\todo-app\\client\\src\\components\\layout\\AddUpdateTodoForm.js":"13","D:\\React-Apps\\todo-app\\client\\src\\components\\layout\\DatePicker.js":"14","D:\\React-Apps\\todo-app\\client\\src\\components\\layout\\TodosItem.js":"15","D:\\React-Apps\\todo-app\\client\\src\\components\\layout\\AddUpdateTodoListForm.js":"16","D:\\React-Apps\\todo-app\\client\\src\\components\\layout\\TodosListItem.js":"17"},{"size":197,"mtime":1608649047199,"results":"18","hashOfConfig":"19"},{"size":316,"mtime":1608731287718,"results":"20","hashOfConfig":"19"},{"size":1112,"mtime":1608880606388,"results":"21","hashOfConfig":"19"},{"size":4414,"mtime":1608896517725,"results":"22","hashOfConfig":"19"},{"size":5469,"mtime":1608911258864,"results":"23","hashOfConfig":"19"},{"size":399,"mtime":1608731189396,"results":"24","hashOfConfig":"19"},{"size":236,"mtime":1608817859467,"results":"25","hashOfConfig":"19"},{"size":1727,"mtime":1608846778645,"results":"26","hashOfConfig":"19"},{"size":873,"mtime":1608889913927,"results":"27","hashOfConfig":"19"},{"size":4109,"mtime":1608816908975,"results":"28","hashOfConfig":"19"},{"size":1625,"mtime":1608889971814,"results":"29","hashOfConfig":"19"},{"size":2684,"mtime":1608890115065,"results":"30","hashOfConfig":"19"},{"size":1306,"mtime":1608897266784,"results":"31","hashOfConfig":"19"},{"size":1041,"mtime":1608911005632,"results":"32","hashOfConfig":"19"},{"size":2619,"mtime":1608910715537,"results":"33","hashOfConfig":"19"},{"size":1342,"mtime":1608894934578,"results":"34","hashOfConfig":"19"},{"size":2292,"mtime":1608896496264,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"fjlbhw",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"D:\\React-Apps\\todo-app\\client\\src\\index.js",[],["74","75"],"D:\\React-Apps\\todo-app\\client\\src\\App.js",[],"D:\\React-Apps\\todo-app\\client\\src\\components\\Home.js",[],"D:\\React-Apps\\todo-app\\client\\src\\components\\TodosList.js",["76","77"],"import React, { Fragment, useEffect, useState, useRef } from 'react';\r\nimport AddUpdateTodoListForm from './layout/AddUpdateTodoListForm';\r\nimport TodosListItem from './layout/TodosListItem';\r\nimport { connect } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {\r\n  getTodosList,\r\n  getTodosLists,\r\n  addTodosList,\r\n  updateTodosList,\r\n  setCurrent,\r\n  clearCurrent,\r\n  deleteTodosList,\r\n} from '../actions/todosListAction';\r\nimport { clearTodos } from '../actions/todosAction';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    maxWidth: '400px',\r\n    width: '100%',\r\n  },\r\n\r\n  fontBold: {\r\n    fontWeight: 600,\r\n  },\r\n}));\r\n\r\nconst TodosList = ({\r\n  setTodosListId,\r\n  todosId,\r\n  todosList: { todosLists, current, loading },\r\n  getTodosLists,\r\n  addTodosList,\r\n  updateTodosList,\r\n  setCurrent,\r\n  clearCurrent,\r\n  clearTodos,\r\n  deleteTodosList,\r\n}) => {\r\n  useEffect(() => {\r\n    getTodosLists();\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n\r\n  const clearInput = useRef();\r\n  const listNameState = '';\r\n  const [listName, setListName] = useState(listNameState);\r\n  const [id, setId] = useState();\r\n  const newTodoList = { listName };\r\n\r\n  useEffect(() => {\r\n    if (current) {\r\n      setListName(current.listName);\r\n    }\r\n  }, [current]);\r\n\r\n  const [active, setActive] = useState(false);\r\n\r\n  const clear = () => {\r\n    clearInput.current.value = '';\r\n  };\r\n\r\n  const onAddTodosList = () => {\r\n    if (current !== null) {\r\n      updateTodosList(id, newTodoList);\r\n      setListName(listNameState);\r\n      clearCurrent();\r\n      clear();\r\n    } else {\r\n      addTodosList(newTodoList);\r\n      setListName(listNameState);\r\n      clear();\r\n    }\r\n  };\r\n\r\n  const onDeleteTodosList = (todosListId) => {\r\n    deleteTodosList(todosListId);\r\n    setTodosListId(null);\r\n    clearTodos();\r\n  };\r\n\r\n  const onClickTodoList = (id) => {\r\n    if (current !== null) {\r\n      clearCurrent();\r\n      setListName(listNameState);\r\n      clear();\r\n    }\r\n\r\n    setTodosListId(id);\r\n    setActive((active) => !active);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <AddUpdateTodoListForm\r\n        listName={listName}\r\n        setListName={setListName}\r\n        onAddTodosList={onAddTodosList}\r\n        current={current}\r\n        clearInput={clearInput}\r\n      />\r\n\r\n      {!loading && todosLists === null ? (\r\n        <CircularProgress />\r\n      ) : (\r\n        <Box\r\n          className={classes.root}\r\n          borderRadius=\"7px\"\r\n          boxShadow={2}\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          overflow=\"hidden\"\r\n        >\r\n          <Box display=\"flex\" padding=\"10px\">\r\n            <Box display=\"flex\" alignItems=\"center\" width=\"70%\">\r\n              <Typography variant=\"subtitle2\" className={classes.fontBold}>\r\n                Name\r\n              </Typography>\r\n            </Box>\r\n\r\n            <Box\r\n              display=\"flex\"\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"center\"\r\n              width=\"30%\"\r\n            >\r\n              <Typography variant=\"subtitle2\" className={classes.fontBold}>\r\n                Edit\r\n              </Typography>\r\n              <Typography variant=\"subtitle2\" className={classes.fontBold}>\r\n                Delete\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n\r\n          {todosLists.length === 0 ? (\r\n            <Typography align=\"center\" style={{ margin: '5px' }}>\r\n              No Todo Lists Found\r\n            </Typography>\r\n          ) : (\r\n            todosLists.map((todosList) => (\r\n              <TodosListItem\r\n                key={todosList._id}\r\n                todosList={todosList}\r\n                todosId={todosId}\r\n                onClickTodoList={onClickTodoList}\r\n                setCurrent={setCurrent}\r\n                setId={setId}\r\n                onDeleteTodosList={onDeleteTodosList}\r\n              />\r\n            ))\r\n          )}\r\n        </Box>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  todosList: state.todosLists,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getTodosLists,\r\n  getTodosList,\r\n  addTodosList,\r\n  updateTodosList,\r\n  setCurrent,\r\n  clearCurrent,\r\n  clearTodos,\r\n  deleteTodosList,\r\n})(TodosList);\r\n","D:\\React-Apps\\todo-app\\client\\src\\components\\Todos.js",["78"],"D:\\React-Apps\\todo-app\\client\\src\\store.js",[],"D:\\React-Apps\\todo-app\\client\\src\\reducers\\index.js",[],"D:\\React-Apps\\todo-app\\client\\src\\reducers\\todosListReducer.js",["79"],"import {\r\n  GET_TODOS_LIST,\r\n  GET_TODOS_LISTS,\r\n  CREATE_TODOS_LIST,\r\n  UPDATE_TODOS_LIST,\r\n  DELETE_TODOS_LIST,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  TODOS_LISTS_ERROR,\r\n  SET_LOADING,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  todosLists: null,\r\n  todos: null,\r\n  current: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_TODOS_LISTS:\r\n      return {\r\n        ...state,\r\n        todosLists: action.payload,\r\n        loading: false,\r\n      };\r\n    case GET_TODOS_LIST:\r\n      return {\r\n        ...state,\r\n        todos: action.payload,\r\n        loading: false,\r\n      };\r\n    case CREATE_TODOS_LIST:\r\n      return {\r\n        ...state,\r\n        todosLists: [...state.todosLists, action.payload],\r\n        loading: false,\r\n      };\r\n    case UPDATE_TODOS_LIST:\r\n      return {\r\n        ...state,\r\n        todosLists: state.todosLists.map((todosList) =>\r\n          todosList._id === action.payload.id ? action.payload.data : todosList\r\n        ),\r\n      };\r\n    case DELETE_TODOS_LIST:\r\n      return {\r\n        ...state,\r\n        todosLists: state.todosLists.filter(\r\n          (todosList) => todosList._id !== action.payload\r\n        ),\r\n      };\r\n    case SET_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: action.payload,\r\n      };\r\n    case CLEAR_CURRENT:\r\n      return {\r\n        ...state,\r\n        current: null,\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case TODOS_LISTS_ERROR:\r\n      console.error(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\React-Apps\\todo-app\\client\\src\\actions\\types.js",[],"D:\\React-Apps\\todo-app\\client\\src\\actions\\todosListAction.js",[],"D:\\React-Apps\\todo-app\\client\\src\\reducers\\todosReducer.js",["80"],"import {\r\n  GET_TODOS,\r\n  CREATE_TODO,\r\n  UPDATE_TODO,\r\n  COMPLETE_TODO,\r\n  DELETE_TODO,\r\n  SET_CURRENT_TODO,\r\n  CLEAR_CURRENT_TODO,\r\n  CLEAR_TODOS,\r\n  SET_LOADING,\r\n  TODO_ERROR,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  todos: null,\r\n  currentTodo: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_TODOS:\r\n      return {\r\n        ...state,\r\n        todos: action.payload,\r\n        loading: false,\r\n      };\r\n    case CREATE_TODO:\r\n      return {\r\n        ...state,\r\n        todos: [...state.todos, action.payload],\r\n        loading: false,\r\n      };\r\n    case UPDATE_TODO:\r\n    case COMPLETE_TODO:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map((todos) =>\r\n          todos._id === action.payload.id ? action.payload.data : todos\r\n        ),\r\n      };\r\n    case DELETE_TODO:\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter((todos) => todos._id !== action.payload),\r\n      };\r\n    case SET_CURRENT_TODO:\r\n      return {\r\n        ...state,\r\n        currentTodo: action.payload,\r\n      };\r\n    case CLEAR_CURRENT_TODO:\r\n      return {\r\n        ...state,\r\n        currentTodo: null,\r\n      };\r\n    case CLEAR_TODOS:\r\n      return {\r\n        ...state,\r\n        todos: null,\r\n        loading: true,\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case TODO_ERROR:\r\n      console.error(action.payload);\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","D:\\React-Apps\\todo-app\\client\\src\\actions\\todosAction.js",[],"D:\\React-Apps\\todo-app\\client\\src\\components\\layout\\AddUpdateTodoForm.js",[],"D:\\React-Apps\\todo-app\\client\\src\\components\\layout\\DatePicker.js",[],"D:\\React-Apps\\todo-app\\client\\src\\components\\layout\\TodosItem.js",[],"D:\\React-Apps\\todo-app\\client\\src\\components\\layout\\AddUpdateTodoListForm.js",[],"D:\\React-Apps\\todo-app\\client\\src\\components\\layout\\TodosListItem.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":45,"column":6,"nodeType":"87","endLine":45,"endColumn":8,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":61,"column":10,"nodeType":"91","messageId":"92","endLine":61,"endColumn":16},{"ruleId":"85","severity":1,"message":"93","line":89,"column":6,"nodeType":"87","endLine":89,"endColumn":19,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":21,"column":1,"nodeType":"97","endLine":79,"endColumn":3},{"ruleId":"95","severity":1,"message":"96","line":21,"column":1,"nodeType":"97","endLine":78,"endColumn":3},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTodosLists'. Either include it or remove the dependency array. If 'getTodosLists' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["100"],"no-unused-vars","'active' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'clearCurrentTodo', 'currentTodo', and 'getAllTodos'. Either include them or remove the dependency array. If 'getAllTodos' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["101"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},"Update the dependencies array to be: [getTodosLists]",{"range":"106","text":"107"},"Update the dependencies array to be: [clearCurrentTodo, currentTodo, getAllTodos, todosListId]",{"range":"108","text":"109"},[1116,1118],"[getTodosLists]",[2025,2038],"[clearCurrentTodo, currentTodo, getAllTodos, todosListId]"]